<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JPHUL/f6cYqOp8Tc7SQpO3t6n1oP/9k=
</value>
  </data>
</root>